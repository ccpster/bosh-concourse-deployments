#!/usr/bin/env bash

set -eu

: ${DEPLOYMENT_NAME:?}
: ${DEPLOYMENT_CONFIG_PATH:?}
: ${CONCOURSE_SECRETS:?}
: ${BOSH_CLIENT:?}
: ${BOSH_CLIENT_SECRET:?}
: ${BOSH_CA_CERT:?}
: ${JUMPBOX_SSH_USER:=vcap}
: ${JUMPBOX_SSH_KEY:?}
: ${CONCOURSE_EXTERNAL_URL:?}
: ${CONCOURSE_BASIC_AUTH_USERNAME:?}
: ${CONCOURSE_BASIC_AUTH_PASSWORD:?}
: ${CONCOURSE_TEAMS:?}

deployments_dir="$( cd "$( dirname "$0" )" && cd ../.. && pwd )"
workspace_dir="$( cd "${deployments_dir}/.." && pwd )"

# inputs
terraform_config="$( cd "${workspace_dir}/terraform" && pwd )"
release_dir="$( cd "${workspace_dir}/concourse-and-garden" && pwd )"
stemcell_dir="$( cd "${workspace_dir}/stemcell" && pwd )"
bosh_cli=$( echo ${workspace_dir}/bosh-cli/bosh-cli-* )
chmod +x "${bosh_cli}"

tmp_dir="$( mktemp -d /tmp/deploy-concourse-XXXXXXXX)"
cleanup_tmp_dir() {
  rm -rf "${tmp_dir}" || true
}
trap "{ cleanup_tmp_dir; }" EXIT # will be overridden by future trap calls

ssh_key_path="${tmp_dir}/id_rsa.pem"
echo "${JUMPBOX_SSH_KEY}" > "${ssh_key_path}"
chmod 400 "${ssh_key_path}"

terraform_metadata="${terraform_config}/metadata"
jumpbox_external_ip=$( jq -r -e .jumpbox_external_ip ${terraform_metadata} )
director_internal_ip=$( jq -r -e .director_internal_ip ${terraform_metadata} )

jumpbox_address="${JUMPBOX_SSH_USER}@${jumpbox_external_ip}"
ssh_args="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${ssh_key_path}"
ssh ${ssh_args} -M -S "${tmp_dir}/tunnel-socket" -fnNT -L 25555:${director_internal_ip}:25555 "${jumpbox_address}"
cleanup_ssh_tunnel() {
  ssh ${ssh_args} -S "${tmp_dir}/tunnel-socket" -O exit "${jumpbox_address}"
}
trap "{ cleanup_ssh_tunnel; cleanup_tmp_dir; }" EXIT

export BOSH_ENVIRONMENT="127.0.0.1"

echo "Uploading Concourse release..."
${bosh_cli} -n --tty upload-release ${release_dir}/concourse-*.tgz
echo "Uploading Garden release..."
${bosh_cli} -n --tty upload-release ${release_dir}/garden-runc-*.tgz
echo "Uploading stemcell..."
${bosh_cli} -n --tty upload-stemcell ${stemcell_dir}/*.tgz

pushd "${deployments_dir}" > /dev/null
  echo "Building Concourse manifest..."

  ops_flags=""
  CONCOURSE_TEAMS=( $(echo $CONCOURSE_TEAMS | jq -r '.[] | "\"\(.name)\"\n\"\(.worker_public_key)\""') )
  while [ -n "${CONCOURSE_TEAMS:-}" ] && [ ${#CONCOURSE_TEAMS} -ne 0 ]; do
    team_name="${CONCOURSE_TEAMS[0]}"
    worker_public_key="${CONCOURSE_TEAMS[1]} ${CONCOURSE_TEAMS[2]}"
    ops_path=${tmp_dir}/${team_name}-ops.yml
    ${bosh_cli} interpolate ./concourse/worker-ops.yml \
      -v team="${team_name}" \
      -v worker_public_key="${worker_public_key}" \
      > "${ops_path}"
    ops_flags="${ops_flags} --ops-file ${ops_path}"
    CONCOURSE_TEAMS=("${CONCOURSE_TEAMS[@]:3}")
  done

  echo "Deploying Concourse..."
  ${bosh_cli} -n --tty deploy \
    -l <(echo "${CONCOURSE_SECRETS}") \
    -v concourse_external_url=${CONCOURSE_EXTERNAL_URL} \
    -v concourse_basic_auth_username=${CONCOURSE_BASIC_AUTH_USERNAME} \
    -v concourse_basic_auth_password=${CONCOURSE_BASIC_AUTH_PASSWORD} \
    -d "${DEPLOYMENT_NAME}" \
    ${ops_flags} \
    "${DEPLOYMENT_CONFIG_PATH}"
  echo "Successfully deployed Concourse!"
popd > /dev/null
