#!/usr/bin/env bash

set -eu

: ${DEPLOYMENT_NAME:?}
: ${DEPLOYMENT_CONFIG_PATH:?}
: ${CONCOURSE_SECRETS:?}
: ${BOSH_CLIENT:?}
: ${BOSH_CLIENT_SECRET:?}
: ${BOSH_CA_CERT:?}
: ${JUMPBOX_SSH_USER:?}
: ${JUMPBOX_SSH_KEY:?}
: ${CONCOURSE_EXTERNAL_URL:?}
: ${CONCOURSE_BASIC_AUTH_USERNAME:?}
: ${CONCOURSE_BASIC_AUTH_PASSWORD:?}

deployments_dir="$( cd "$( dirname "$0" )" && cd ../.. && pwd )"
workspace_dir="$( cd "${deployments_dir}/.." && pwd )"

# inputs
terraform_config="$( cd "${workspace_dir}/terraform" && pwd )"
concourse_and_garden_release_dir="$( cd "${workspace_dir}/concourse-and-garden" && pwd )"
concourse_windows_release_dir="$( cd "${workspace_dir}/concourse-windows" && pwd )"
ulimit_release_dir="$( cd "${workspace_dir}/ulimit" && pwd )"
stemcell_dir="$( cd "${workspace_dir}/stemcell" && pwd )"
windows_stemcell_dir="$( cd "${workspace_dir}/windows-stemcell" && pwd )"
bosh_cli=$( echo ${workspace_dir}/bosh-cli/bosh-cli-* )
chmod +x "${bosh_cli}"

tmp_dir="$( mktemp -d /tmp/deploy-concourse-XXXXXXXX)"
cleanup_tmp_dir() {
  rm -rf "${tmp_dir}" || true
}
trap "{ cleanup_tmp_dir; }" EXIT # will be overridden by future trap calls

ssh_key_path="${tmp_dir}/id_rsa.pem"
echo "${JUMPBOX_SSH_KEY}" > "${ssh_key_path}"
chmod 400 "${ssh_key_path}"

terraform_metadata="${terraform_config}/metadata"
jumpbox_external_ip=$( jq -r -e .jumpbox_external_ip ${terraform_metadata} )
director_internal_ip=$( jq -r -e .director_internal_ip ${terraform_metadata} )
jumpbox_internal_ip=$( jq -r -e .jumpbox_internal_ip ${terraform_metadata} )
natbox_internal_ip=$( jq -r -e .natbox_internal_ip ${terraform_metadata} )
internal_gw=$( jq -r -e .internal_gw ${terraform_metadata} )
internal_cidr=$( jq -r -e .internal_cidr ${terraform_metadata} )

jumpbox_address="${JUMPBOX_SSH_USER}@${jumpbox_external_ip}"
ssh_args="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${ssh_key_path} -fnNT"
cleanup_ssh_tunnel() {
  killall -KILL ssh
}
trap "{ cleanup_ssh_tunnel; cleanup_tmp_dir; }" EXIT

export BOSH_ENVIRONMENT=${director_internal_ip}

ssh ${ssh_args} -D 1080 ${jumpbox_address} &
export BOSH_ALL_PROXY=socks5://localhost:1080

echo "Uploading Concourse release..."
${bosh_cli} -n --tty upload-release ${concourse_and_garden_release_dir}/concourse-*.tgz
echo "Uploading Garden release..."
${bosh_cli} -n --tty upload-release ${concourse_and_garden_release_dir}/garden-runc-*.tgz
echo "Uploading Concourse Windows release..."
${bosh_cli} -n --tty upload-release ${concourse_windows_release_dir}/release.tgz
echo "Uploading ulimit release..."
( cd $ulimit_release_dir; ${bosh_cli} -n --tty upload-release )
echo "Uploading stemcell..."
${bosh_cli} -n --tty upload-stemcell ${stemcell_dir}/*.tgz
echo "Uploading Windows stemcell..."
${bosh_cli} -n --tty upload-stemcell ${windows_stemcell_dir}/*.tgz

stemcell_version=$( cat ${stemcell_dir}/version )

touch ops-file.yml
if [ -n "${ADDITIONAL_OPS}" -a -n "$( echo "${ADDITIONAL_OPS}" | base64 -d )" ]; then
  ${bosh_cli} int <( echo "${ADDITIONAL_OPS}" | base64 -d ) --path /commands | while read -r CMD; do eval $CMD; done
  ${bosh_cli} int <( echo "${ADDITIONAL_OPS}" | base64 -d ) --path /ops_file_yml > ops-file.yml
fi

pushd "${deployments_dir}" > /dev/null
  echo "Building Concourse manifest..."

  ops_flags=""

  if [ -n "${CONCOURSE_TEAMS}" ]; then
    CONCOURSE_TEAMS=( $(echo $CONCOURSE_TEAMS | jq -r '.[] | "\"\(.name)\"\n\"\(.vm_type)\"\n\"\(.worker_public_key)\""') )
    while [ -n "${CONCOURSE_TEAMS:-}" ] && [ ${#CONCOURSE_TEAMS} -ne 0 ]; do
      team_name="${CONCOURSE_TEAMS[0]}"
      vm_type="${CONCOURSE_TEAMS[1]}"
      worker_public_key="${CONCOURSE_TEAMS[2]} ${CONCOURSE_TEAMS[3]}"
      ops_path=${tmp_dir}/${team_name}-ops.yml
      ${bosh_cli} interpolate ./concourse/worker-ops.yml \
        -v team="${team_name}" \
        -v vm_type="${vm_type}" \
        -v worker_public_key="${worker_public_key}" \
        > "${ops_path}"
      ops_flags="${ops_flags} --ops-file ${ops_path}"
      CONCOURSE_TEAMS=("${CONCOURSE_TEAMS[@]:4}")
    done
  fi

  echo "Deploying Concourse..."
  ${bosh_cli} -n --tty deploy \
    -l <(echo "${CONCOURSE_SECRETS}") \
    -v concourse_external_url=${CONCOURSE_EXTERNAL_URL} \
    -v concourse_basic_auth_username=${CONCOURSE_BASIC_AUTH_USERNAME} \
    -v concourse_basic_auth_password=${CONCOURSE_BASIC_AUTH_PASSWORD} \
    -v stemcell_version="'${stemcell_version}'" \
    -d "${DEPLOYMENT_NAME}" \
    ${ops_flags} \
    --ops-file ../ops-file.yml \
    -v director_internal_ip="${director_internal_ip}" \
    -v jumpbox_internal_ip="${jumpbox_internal_ip}" \
    -v natbox_internal_ip="${natbox_internal_ip}" \
    -v internal_gw="${internal_gw}" \
    -v internal_cidr="${internal_cidr}" \
    --vars-store="you-really-need-this-flag-but-not-this-file.yml" \
    "${DEPLOYMENT_CONFIG_PATH}"
  echo "Successfully deployed Concourse!"
popd > /dev/null
