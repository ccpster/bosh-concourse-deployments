#!/usr/bin/env bash

set -eu

: ${BOSH_CLIENT:?}
: ${BOSH_CLIENT_SECRET:?}
: ${BOSH_CA_CERT:?}
: ${JUMPBOX_SSH_USER:?}
: ${JUMPBOX_SSH_KEY:?}
: ${SSOCA_GITHUB_CLIENT_ID:?}
: ${SSOCA_GITHUB_CLIENT_SECRET:?}
: ${VPN_NETWORK:?}
: ${VPN_NETWORK_MASK:?}
: ${VPN_NETWORK_MASK_BITS:?}

source deployments-src/ci/utils

export BOSH_ENVIRONMENT="$( jq -r -e .director_internal_ip terraform/metadata )"

setup_ssh_tunnel \
  "${JUMPBOX_SSH_KEY}" \
  "${JUMPBOX_SSH_USER}@$( jq -r -e .jumpbox_external_ip terraform/metadata )" \

echo "Uploading OpenVPN release..."
bosh2 -n --tty upload-release openvpn-release/release.tgz

echo "Uploading Networking release..."
bosh2 -n --tty upload-release networking-release/release.tgz

echo "Uploading SSOCA release..."
( cd ssoca; bosh2 -n --tty upload-release )

echo "Uploading stemcell..."
bosh2 -n --tty upload-stemcell stemcell/stemcell.tgz

pushd deployments-src > /dev/null
  echo "Deploying OpenVPN Server..."
  bosh2 -n --tty deploy -d openvpn \
    -v stemcell_version="$( cat stemcell/version )" \
    -v github_client_id="${SSOCA_GITHUB_CLIENT_ID}" \
    -v github_client_secret="${SSOCA_GITHUB_CLIENT_SECRET}" \
    -v vpn_network="$VPN_NETWORK" \
    -v vpn_network_mask="$VPN_NETWORK_MASK" \
    -v vpn_network_mask_bits="$VPN_NETWORK_MASK_BITS" \
    -l ../terraform/metadata \
    --vars-store="you-really-need-this-flag-but-not-this-file.yml" \
    vpn/manifest.yml
  echo "Successfully deployed OpenVPN Server!"
popd > /dev/null
