#!/bin/bash

set -eu

deployments_dir="$( cd "$( dirname "$0" )" && cd ../.. && pwd )"
workspace_dir="$( cd "${deployments_dir}/.." && pwd )"

# env
: ${BOSH_CLIENT:?}
: ${BOSH_CLIENT_SECRET:?}
: ${BOSH_CA_CERT:?}
: ${JUMPBOX_SSH_USER:?}
: ${JUMPBOX_SSH_KEY:?}

# inputs
terraform_config="$( cd "${workspace_dir}/terraform" && pwd )"
bosh_cli=$( echo ${workspace_dir}/bosh-cli/bosh-cli-* )
chmod +x "${bosh_cli}"

tmp_dir="$( mktemp -d /tmp/update-cloud-config-XXXXXXXX)"
cleanup_tmp_dir() {
  rm -rf "${tmp_dir}" || true
}
trap "{ cleanup_tmp_dir; }" EXIT # will be overridden by future trap calls

ssh_key_path="${tmp_dir}/id_rsa.pem"
echo "${JUMPBOX_SSH_KEY}" > "${ssh_key_path}"
chmod 400 "${ssh_key_path}"

terraform_metadata="${terraform_config}/metadata"
external_jumpbox_ip=$( jq -r -e .external_jumpbox_ip ${terraform_metadata} )
internal_director_ip=$( jq -r -e .internal_director_ip ${terraform_metadata} )

jumpbox_address="${JUMPBOX_SSH_USER}@${external_jumpbox_ip}"
ssh_args="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${ssh_key_path}"
ssh ${ssh_args} -M -S "${tmp_dir}/tunnel-socket" -fnNT -L 25555:${internal_director_ip}:25555 "${jumpbox_address}"
cleanup_ssh_tunnel() {
  ssh ${ssh_args} -S "${tmp_dir}/tunnel-socket" -O exit "${jumpbox_address}"
}
trap "{ cleanup_ssh_tunnel; cleanup_tmp_dir; }" EXIT

echo "Updating cloud config..."
${bosh_cli} -n update-cloud-config \
  -e 127.0.0.1 \
  -l "${terraform_config}/metadata" \
  ${deployments_dir}/bosh/cloud-config.yml

echo "Successfully updated cloud-config!"
