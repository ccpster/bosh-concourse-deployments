#!/bin/bash

set -eu

deployments_dir="$( cd "$( dirname "$0" )" && cd ../.. && pwd )"
workspace_dir="$( cd "${deployments_dir}/.." && pwd )"

# env
: ${BOSH_CLIENT:?}
: ${BOSH_CLIENT_SECRET:?}
: ${BOSH_CA_CERT:?}
: ${JUMPBOX_SSH_USER:=vcap}
: ${JUMPBOX_SSH_KEY:?}

# inputs
terraform_config="$( cd "${workspace_dir}/terraform" && pwd )"
bosh_cli=$( echo ${workspace_dir}/bosh-cli/bosh-cli-* )
chmod +x "${bosh_cli}"

tmp_dir="$( mktemp -d /tmp/update-cloud-config-XXXXXXXX)"
cleanup_tmp_dir() {
  rm -rf "${tmp_dir}" || true
}
trap "{ cleanup_tmp_dir; }" EXIT # will be overridden by future trap calls

ssh_key_path="${tmp_dir}/id_rsa.pem"
echo "${JUMPBOX_SSH_KEY}" > "${ssh_key_path}"
chmod 400 "${ssh_key_path}"

terraform_metadata="${terraform_config}/metadata"
jumpbox_external_ip=$( jq -r -e .jumpbox_external_ip ${terraform_metadata} )
director_internal_ip=$( jq -r -e .director_internal_ip ${terraform_metadata} )

jumpbox_address="${JUMPBOX_SSH_USER}@${jumpbox_external_ip}"
ssh_args="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ${ssh_key_path} -fnNT"
cleanup_ssh_tunnel() {
  killall -KILL ssh
}
trap "{ cleanup_ssh_tunnel; cleanup_tmp_dir; }" EXIT

ssh ${ssh_args} -D 1080 ${jumpbox_address} &
export BOSH_ALL_PROXY=socks5://localhost:1080

echo "Updating cloud config..."
${bosh_cli} -n update-cloud-config \
  -e "${director_internal_ip}" \
  -l "${terraform_config}/metadata" \
  ${deployments_dir}/bosh/cloud-config.yml

echo "Successfully updated cloud-config!"
